const InProgressPetMatchIntent = {
    canHandle(handlerInput) {
      const request = handlerInput.requestEnvelope.request;
  
      return request.type === 'IntentRequest'
        && request.intent.name === 'DogMatchIntent'
        && request.dialogState !== 'COMPLETED';
    },
    handle(handlerInput) {
    	/*
	    const currentIntent = handlerInput.requestEnvelope.request.intent;
	    const attributesManager = handlerInput.attributesManager;
	    const sessionAttributes = attributesManager.getSessionAttributes();

	    if(sessionAttributes[currentIntent.name]) {
	      const tempSlots = sessionAttributes[currentIntent.name].slots;
	      for(key in tempSlots) {
	        // If we captured the value before and current intent is not capturing that same slot then store it to currentIntent 
		if (tempSlots[key].value && !currentIntent.slots[key].value) {
		  currentIntent.slots[key] = tempSlots[key];
		}
	      }
	    }
	    sessionAttributes[currentIntent.name] = currentIntent;
	    attributesManager.setSessionAttributes(sessionAttributes);
    	*/
    
        return handlerInput.responseBuilder
        .addDelegateDirective()
        .getResponse();
    },
};

const CompletedPetMatchIntent =  {
    canHandle(handlerInput) {
        const request = handlerInput.requestEnvelope.request;
        return request.type === 'IntentRequest' && request.intent.name === 'DogMatchIntent' 
           && request.dialogState === 'COMPLETED';
    },
    handle(handlerInput) {
        const request = handlerInput.requestEnvelope.request;
        const responseBuilder = handlerInput.responseBuilder;

        var say;

        if (request.intent.confirmationStatus == 'DENIED') {
            say = 'OK, I didn\'t match a dog.';
        } else {
            // Check to see if you have temparment, if not set a default for it
            // Make the api call to select the right dog.
            say = "Here is your dog.";
        }
        
        return responseBuilder
        .speak(say)
        .getResponse();
     },
 };
 
 // Setting Default Values
  let updatedIntent = handlerInput.requestEnvelope.intent;
  let updatedSlots = updatedIntent.slots;

  if( !updatedSlots.size.value) {
	updatedSlots.size.value = 'medium';
  }

  return handlerInput.responseBuilder
        .addDelegateDirective(updatedIntent)
        .getResponse();

// Eliciting Slots
  let say = ‘Banana is not a size. Choose small or medium?’;
  const slotName = ‘size’;

  return handlerInput.responseBuilder
	.speak(say)
	.reprompt(say)
        .addElicitSlotDirective(slotName)
        .getResponse();
	
	

